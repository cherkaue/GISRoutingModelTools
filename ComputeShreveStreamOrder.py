# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# ComputeShreveStreamOrder.py
# Created on: 2016-10-14 15:05:21.00000
#   (generated by ArcGIS/ModelBuilder)
# Usage: ComputeShreveStreamOrder <FlowDirectionFile> <StreamRasterFile> <ShreveOrder> 
# Description: 
# This function creates a stream order grid using the method of Shreve, which 
# will be used for interpolating the channel roughness coefficient. 
# ---------------------------------------------------------------------------

# Import arcpy module
import arcpy

# Script arguments
FlowDirectionFile = arcpy.GetParameterAsText(0)
if FlowDirectionFile == '#' or not FlowDirectionFile:
    FlowDirectionFile = "Fdr" # provide a default value if unspecified

StreamRasterFile = arcpy.GetParameterAsText(1)
if StreamRasterFile == '#' or not StreamRasterFile:
    StreamRasterFile = "Str" # provide a default value if unspecified

rasterPath = arcpy.GetParameterAsText(2)
if rasterPath == '#' or not rasterPath:
    rasterPath = "RoutingLayers" # provide a default value if unspecified

# Build file names and check for output directory
ShreveOrder = "ShreveOrder" # default name for shreve stream order grid
ShreveOrderPath = "%s\%s" % ( rasterPath, ShreveOrder ) # provide a default value if unspecified
ShreveOrderLayer = "%s_lyr" % ShreveOrder
arcpy.AddMessage("Calculating Shreve Stream order and creating raster %s" % ( ShreveOrderPath))

# check for existing file
if arcpy.Exists(ShreveOrderPath):
    arcpy.Delete_management(ShreveOrderPath)

# check for existing layer
if arcpy.Exists(ShreveOrderLayer):
    arcpy.Delete_management(ShreveOrderLayer)

# Local variables:
StreamOrderingMethod = "SHREVE"

# Process: Stream Order
arcpy.gp.StreamOrder_sa(StreamRasterFile, FlowDirectionFile, ShreveOrderPath, StreamOrderingMethod)

# Add layer to the display
mxd = arcpy.mapping.MapDocument("CURRENT")
dataFrame = arcpy.mapping.ListDataFrames(mxd, "*")[0]
result = arcpy.MakeRasterLayer_management(ShreveOrderPath, ShreveOrderLayer)
addLayer = result.getOutput(0)
arcpy.mapping.AddLayer(dataFrame,addLayer)
